{"ts":1368496354176,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var should = require('should');\nvar config = require('../../config.json');\nvar brinydeep = require('../index.js');\n\nbefore(function (done) {\n\t\tbrinydeep.setup(config.client_key, config.api_key);\n\t\tdone();\n});\nvar temp_ids ='';\nvar new_droplet_multi = {\n\tdroplets: [\n\t\t{\n\t\t\tname: \"test2\",\n\t\t\tsize_id: 66,\n\t\t\timage_id: 25306,\n\t\t\tregion_id: 1\n\t\t},\n\t\t{\n\t\t\tname: \"test3\",\n\t\t\tsize_id: 66,\n\t\t\timage_id: 25306,\n\t\t\tregion_id: 1\n\t\t}\n\t]\n};\nvar new_droplet = {\n\tname: \"test1\",\n\tsize_id: 66,\n\timage_id: 25306,\n\tregion_id: 1\n};\nvar id;\n// it('should be able to show documentation', function (done) {\n// \tbrinydeep.documentation(function (e,o) {\n// \t\to.should.be.a('string');\n// \t\tdone();\n// \t});\n// });\n\n// it('should be able to show active droplets', function (done) {\n// \tbrinydeep.show_active(function (e,o) {\n// \t\to.status.should.equal('OK');\n// \t\to.droplets.length.should.equal(0);\n// \t\tdone();\n// \t});\n// });\n\n// it('should be able to create a droplet', function (done) {\n// \tbrinydeep.new_droplets(new_droplet,function (e,o) {\n// \t\to.status.should.equal('OK');\n// \t\tdone();\n// \t});\n// });\n// it('should be able to create multiple droplets', function (done) {\n// \tbrinydeep.new_droplets(new_droplet_multi,function (e,o) {\n// \t\tconsole.log(e,o)\n// \t\to.status.should.equal('OK');\n// \t\to.droplets.length.should.equal(0);\n// \t\tdone();\n// \t});\n// });\nit('should be able to list all ids', function (done) {\n\tbrinydeep.get_ids(function (e,o) {\n\t\ttemp_ids = o;\n\t\t//o.length.should.equal(3);\n\t\tdone();\n\t});\n});\n// it('should be able to show droplet by ID', function (done) {\n// \tbrinydeep.show_droplets('105423',function (e,o) {\n// \t\tconsole.log(o);\n// \t\to.status.should.equal('OK');\n// \t\tdone();\n// \t});\n// });\n// it('should be able reboot machines', function (done) {\n// \tbrinydeep.reboot(temp_ids,function (e,o) {\n// \t\tconsole.log(o)\n// \t\to.forEach(function (stat) {\n// \t\t\tstat.status.should.equal('OK');\n// \t\t})\n// \t});\n// });\n// it('should be able to destroy all machines', function (done) {\n// \tbrinydeep.destroy_all_droplets(function (e,o) {\n// \t\to.forEach(function (stat) {\n// \t\t\tstat.status.should.equal('OK');\n// \t\t})\n// \t\tdone();\n// \t});\n// });\nit('should be able to list sizes', function (done) {\n\tbrinydeep.sizes(function (e,o) {\n\t\to.status.should.equal('OK');\n\t\tconsole.log(o);\n\t\tdone();\n\t});\n});"]],"start1":0,"start2":0,"length1":0,"length2":2293}]],"length":2293}
